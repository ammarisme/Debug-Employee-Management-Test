@using FrontEnd.Areas.Employees.Models;
@using ClassLibrary.DatabaseModels;
@model  EmployeeViewModel
@{
    ViewBag.title = ViewBag.EmployeeTypeText;
}
<title>@ViewBag.title</title>
<h5>@ViewBag.title</h5>

<ul class="nav nav-tabs" style="margin-bottom: 15px;">
    <li class="active"><a href="#Employees" data-toggle="tab">Employee</a></li>
    <li><a href="#container" data-toggle="tab">@ViewBag.ContainerType</a></li>
</ul>

<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="Employees">
        <div class="row">
            <div class="col-md-12">
                <form action="no-implemetation" id="Employees-form" method="POST">

                    <div class="col-md-5 col-xs-12 pull-left panel sub-content-panel">
                        @if (Model.EmployeeType == "2")
                        {
                            <h5> Recievers </h5>
                        }
                        else if (Model.EmployeeType == "3")
                        {
                            <h5> Vats</h5>
                        }

                        <div class="col-md-12 form-group">
                            <div class="col-md-4">
                                @if (Model.EmployeeType == "2")
                                {
                                    <label for="name" class="custom-label pull-right">Reciever :</label>
                                }
                                else if (Model.EmployeeType == "3")
                                {
                                    <label for="name" class="custom-label pull-right">Vats :</label>
                                }
                            </div>
                            <div class="col-md-8">
                                @if (Model.ContainerId.Count > 1)
                                {
                                    @Html.DropDownListFor(m => m.ContainerId,
                                  new SelectList(Model.ContainerId,
                               "Id", "ContainerName",
                                        Model.ContainerId.First().Id), new { @class = "form-control custom-text-box col-md-12", id = "ContainerId", name = "ContainerName" })
                                }
                                else
                                {
                                    if (Model.EmployeeType == "2")
                                    {
                                        <label> No Receivers available</label>
                                    }
                                    else if (Model.EmployeeType == "3")
                                    {
                                        <label> No Vats available</label>
                                    }
                                }
                            </div>
                        </div>

                    </div>

                    <div class="col-md-6 col-xs-12 panel sub-content-panel pull-right">
                        <h5>Machine</h5>

                        <div class="col-md-12 form-group">
                            <div class="col-md-4">
                                <label for="name" class="custom-label pull-right">Machine :</label>
                            </div>
                            <div class="col-md-8 input-field">
                                @if (Model.MachineId.Count > 0)
                                {
                                    @Html.DropDownListFor(m => m.MachineId,
                                  new SelectList(Model.MachineId.FindAll(ma => (ma.Status == "A" && Model.EmployeeType == "3") || ((ma.MachineType == "FPS" || ma.MachineType=="POT" )&& Model.EmployeeType == "2")),
                               "Id", "MachineName",
                                        Model.MachineId.First().Id), new { @class = "form-control col-md-12", id = "Id", name = "MachineName" })
                                }
                                else
                                {
                                    <label>No Machines</label>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12 col-xs-12 panel pull-right sub-content-panel">
                        <h5>Employee</h5>
                        @Html.TextBoxFor(m => m.Id, new { @class = "form-control hidden", type = "number", min = "0", step = "0.1", autocomplete = "off" })

                        <div class="col-md-12">
                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label">Date:</label>
                                </div>
                                <div class="col-md-12">
                                    <span class="input-group-addon custom-datepicker form-control">
                                        <span class="glyphicon glyphicon-calendar date-icon"></span>
                                        @Html.TextBoxFor(m => m.StartTime, new { @class = "datepicker custom-text-box form-control", autocomplete = "off", pattern = "[A-Za-z0-9]{1,20}", type = "text", required = "true" })
                                    </span>
                                </div>
                            </div>

                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label">Final Dip (cm):</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.ContainerToDepth, new { @class = "form-control custom-text-box", required = "true", type = "number", min = "0", step = "0.1", autocomplete = "off" })
                                </div>
                            </div>

                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label"> Bulk (l) :</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.InputGrossVolume, new { @class = "form-control disabled", required = "true", type = "number", step = "0.1", autocomplete = "off", tabIndex = "-1" })
                                </div>
                            </div>
                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label"> A/A (l) :</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.InputPureVolume, new { @class = "form-control disabled", tabindex = "-1", required = "true", type = "number", step = "0.01", autocomplete = "off" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            @Html.TextBoxFor(m => m.CreatedUser, new { @class = "form-control hidden"})
                            @Html.TextBoxFor(m => m.LiquidTypeId, new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.LocationId, new { @class = "form-control hidden" })
                            @Html.TextBoxFor(m => m.EmployeeType, new { @class = "form-control hidden" })
                            <button type="submit" id="new-Employee-button" class="btn btn-primary btn-raised pull-right">New @ViewBag.EmployeeTypeText<span class="fa fa-arrow-down"></span></button>
                            <button type="submit" id="update-Employee-button" class="btn btn-warning btn-raised pull-right hidden">Update Last @ViewBag.EmployeeTypeText<span class="fa fa-arrow-down"></span></button>
                        </div>
                    </div>

                    <div class="col-md-12 col-xs-12 panel pull-right sub-content-panel">
                        <h5>@ViewBag.ContainerType Status</h5>
                        <div class="col-md-12">
                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label pull-left">Current Dip (cm):</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.ContainerFromDepth, new { @class = "form-control disabled", tabindex = "-1", required = "true", type = "number", step = "0.1", autocomplete = "off", novalidate = "" })
                                </div>
                            </div>
                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label pull-left">Bulk (l):</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.CurrentVolume, new { @class = "form-control disabled", tabindex = "-1", required = "true", type = "number", step = "0.1", autocomplete = "off", novalidate = "" })
                                </div>
                            </div>
                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label">Strength:</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.Strength, new { @class = "form-control disabled", tabindex = "-1", required = "true", type = "number", step = "0.1", autocomplete = "off" })
                                </div>
                            </div>
                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label pull-left">A/A (l):</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.CurrentPureVolume, new { @class = "form-control disabled", tabindex = "-1", required = "true", type = "number", step = "0.1", autocomplete = "off", novalidate = "" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label">Temperature (C):</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.Temperature, new { @class = "form-control disabled", required = "true", type = "number", min = "1", step = "0.1", autocomplete = "off", tabIndex = "-1" })
                                </div>
                            </div>

                            <div id="name-group" class="form-group col-md-3">
                                <div class="col-md-12">
                                    <label for="name" class="custom-label">Density (kg/m<sup>3</sup>) :</label>
                                </div>
                                <div class="col-md-12">
                                    @Html.TextBoxFor(m => m.Density, new { @class = "form-control disabled", required = "true", type = "number", min = "1", step = "0.1", autocomplete = "off", tabIndex = "-1" })
                                </div>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <div class="tab-pane fade" id="container">
        <div class="row">
            <div class="col-md-12 col-xs-12 panel sub-content-panel hidden">
                <h5>@ViewBag.ContainerType</h5>
                <form action="no-implementation" id="last-Employee-form" method="post">
                    <div id="name-group" class="form-group col-md-6 hidden">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> Id :</label>
                        </div>
                        <div class="col-md-8">
                            <input name="id" />
                            @Html.TextBoxFor(m => m.Id, new { @class = "form-control hidden", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="form-group col-md-6 hidden">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> Container Id :</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.ContainerId, new { @class = "form-control hidden", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="col-md-3">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> From Drip (cm):</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.ContainerFromDepth, new { @class = "form-control disabled", tabindex = "-1", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="col-md-3">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> To Drip (cm):</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.ContainerToDepth, new { @class = "form-control disabled", tabindex = "-1", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="col-md-3">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> Bulk Vol :</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.InputGrossVolume, new { @class = "form-control  disabled", tabindex = "-1", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="form-group col-md-6  hidden">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> A/A (l) :</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.InputPureVolume, new { @class = "form-control hidden", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="col-md-3">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> Last Employee Time:</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.StartTime, new { @class = "form-control  disabled", tabindex = "-1", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="col-md-3">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> User:</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.CreatedUser, new { @class = "form-control  disabled", tabindex = "-1", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>
                    <div id="name-group" class="col-md-6  hidden">
                        <div class="col-md-4">
                            <label for="name" class="custom-label pull-right"> User:</label>
                        </div>
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.EmployeeType, new { @class = "form-control hidden", type = "number", min = "1", step = "0.1", autocomplete = "off" })
                        </div>
                    </div>

                    <div class="col-md-12">
                        <button type="submit" class="btn btn-warning btn-raised pull-right">Edit Last @ViewBag.EmployeeTypeText<span class="fa fa-arrow-down"></span></button>
                        <button type="submit" class="btn btn-primary btn-raised pull-right">Load From @ViewBag.EmployeeTypeText<span class="fa fa-arrow-down"></span></button>
                    </div>
                </form>
            </div>

            <div class="col-md-12 panel sub-content-panel pull-right">
                <h5>@ViewBag.ContainerType (s)</h5>
                <table id="recievers-table" class="display table table-hover table-striped" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="hidden">Id</th>
                            <th>@ViewBag.ContainerType</th>
                            <th>Current Dip (cm)</th>
                            <th>Bulk(l)</th>
                            <th>Pure(l)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Container reciever in Model.ContainerId)
                        {
                            if (reciever != null && reciever.Id != "-1")
                            {
                                <tr>
                                    <td class="hidden">
                                        @reciever.Id
                                    </td>
                                    <td>
                                        @reciever.ContainerName
                                    </td>
                                    <td>
                                        @reciever.CurrentDepth
                                    </td>
                                    <td>
                                        @reciever.FilledVolume
                                    </td>
                                    <td>
                                        @reciever.PureVolume
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section script{
    <script>
        var onMachineSelection = function () {
            var key = getTableSelectedRowKey($("#machines-table"));
            $("#EmployeeMachineId").val(key);
        };

        var onMachineUnSelection = function () {
            $("#EmployeeMachineId").val("");
        }

        var onRecieverSelection = function () {
            var key = getTableSelectedRowKey($("#recievers-table"));
            $("#ContainerId").val(key);
            var containers = getTableData(recieversTable);
            $("#ContainerFromDepth").val(containers[getTableSelectedRowIndex($("#recievers-table"))]["CurrentDepth"]);
            console.log(containers[getTableSelectedRowIndex($("#recievers-table"))]);
        };

        var onRecieverUnselection = function () {
            $("#ContainerId").val("");
        }

        var machinesTable = initiateTable1("machines-table", {
            "bLengthChange": false, "columns": [
        { "data": "EmployeeMachineId" },
        { "data": "MachineName" }
            ],
            "sDom": "t",
            "language": {
                "emptyTable": "No Machines in active state."
            }
        }, onMachineSelection, onMachineUnSelection);

        var recieversTable = initiateTable1("recievers-table", {
            "bLengthChange": false, "columns": [
            { "data": "Id" },
            { "data": "ContainerName" },
            { "data": "LiquidType" },
            { "data": "LiquidTypeId" },
            { "data": "BulkVolume" }
            ],
            "sDom": "t",
            "language": {
                "emptyTable": "No Recievers available."
            }
        }, onRecieverSelection, onRecieverUnselection);

        var onCompletion = function () {
            var sale = getTableData(machinesTable);
            var total = 0.00;
            for (var key in sale) {
                if (sale.hasOwnProperty(key)) {
                    var unitPrice = sale[key]["UnitPrice"];
                    var quantity = sale[key]["Quantity"];
                    var subTotal = unitPrice * quantity;
                    total = total + subTotal;
                }
            }


            if (total - parseInt(total) > 0) {
                // this is a float number
                if (((total - parseInt(total)) * 100) < 10 || parseInt(((total - parseInt(total)) * 100)) % 10 != 0) {
                    $("#total-sale-amount").html(total + "0");
                } else {
                    $("#total-sale-amount").html(total + "0");

                }

            } else {
                $("#total-sale-amount").html(total + ".00")
            }
        };

        var beforeSubmission = function () {
            var subtotal = parseFloat($("#unit-price-input").val()) * parseFloat($("#quantity-input").val());
            $("#subtotal-input").val(subtotal);
        }

        $("#Employees-form").on('submit', function (event) {
            var error = "";
            error = $("input[name=StartTime]").val() == "" ? error + '<div class="alert alert-danger col-md-12">Please enter date.</div>' : error;
            
            if (error != "") {
                showModalMessage("Error", error);
            } else {

                var data = getFormValues("Employees-form");
                if ($("#Employees-form button[type='submit']:focus").hasClass("btn-warning")) {
                    sendObjectToServer("../../api/Employee/ReDistill/Update", data,
                       function (data) {
                           showModalMessage("@ViewBag.EmployeeTypeText", "<li>Liquid sent for <strong>@ViewBag.EmployeeTypeText</strong></li>");
                           $("#new-Employee-button").addClass("disabled");
                       }, function (data) {
                           showModalMessage("Error", "");
                       });
                } else {
                    sendObjectToServer("../../api/Employee/Distill/Add", data,
                   function (data) {
                       showModalMessage("@ViewBag.EmployeeTypeText", "<li>Liquid is sent for <strong>@ViewBag.EmployeeTypeText</strong></li>");
                       //showModalMessage("@ViewBag.EmployeeTypeText", data);
                   }, function (data) {
                       showModalMessage("Error", "");
                   });
                }
            }
            event.preventDefault();
        });

        $("#last-Employee-form").on('submit', function (event) {
            var response = getFormValues("last-Employee-form");
            console.log(response);
            $("#Employees-form select[name='MachineId']").val(response["ContainerId"]);
            if ($("#last-Employee-form button[type='submit']:focus").hasClass("btn-warning")) {
                $("#Employees-form select[name='StartTime']").hide();
                $("#new-Employee-button").addClass("hidden")
                $("#update-Employee-button").removeClass("hidden")
            } else {
                $("#new-Employee-button").removeClass("hidden")
                $("#update-Employee-button").addClass("hidden")
            }

            event.preventDefault();
        });

        $("#Employees-form select[name='ContainerId']").change(function () {
            var containerId;
            var container;
            var lastEmployee;

            $.ajax({
                type: 'get',
                url: "../../api/Container/Get?containerId=" + $(this).val(),
                dataType: 'json',
                contentType: 'application/json',
                success: function (response) {
                    container = response;
                    $("#Employees-form input[name='ContainerFromDepth']").val(container["currentDepth"]);
                    $("#Employees-form input[name='ContainerToDepth']").attr("max", container["currentDepth"]);

                    $("#Employees-form input[name='ContainerToDepth']").val("");
                    $("#Employees-form input[name='Temperature']").val(container["temperature"]);
                    $("#Employees-form input[name='Density']").val(container["density"]);
                    $("#Employees-form input[name='Strength']").val(container["strength"]);
                    $("#Employees-form input[name='CurrentVolume']").val(container["fillVolume"]);
                    $("#Employees-form input[name='CurrentPureVolume']").val(container["pureVolume"]);
                    $("#Employees-form input[name='InputGrossVolume']").val("");
                    $("#Employees-form input[name='InputPureVolume']").val("");
                    $("#Employees-form input[name='LiquidTypeId']").val(container["liquidTypeId"]);

                },
                error: function (response) {
                    console.log("failure" + response);
                }
            });
        });

        $("#Employees-form input[name='Density']").change(function () {
            if ($("#Employees-form input[name='Temperature']").val() != '') {
                var strength = getStrength($(this).val(), $("#Employees-form input[name='Temperature']").val());
                strength = strength == "Error" ? "0" : strength;
                $("#Employees-form input[name='Strength']").val(strength);
                var density = parseFloat($("#Employees-form input[name='Density']").val());
                var bulk = parseFloat($("#Employees-form input[name='InputGrossVolume']").val());
                $("#Employees-form input[name='InputPureVolume']").val(((strength * bulk) / 100).toFixed(1));
            } else {
                console.log("a");
                $("#Employees-form input[name='Strength']").val("0");
            }
        });

        $("#Employees-form input[name='Temperature']").change(function () {
            if ($("#Employees-form input[name='Density']").val() != '') {
                var strength = getStrength($("#Employees-form input[name='Density']").val(), $(this).val());
                strength = strength == "Error" ? "0" : strength;
                $("#Employees-form input[name='Strength']").val(strength);
                var density = parseFloat($("#Employees-form input[name='Density']").val());
                var bulk = parseFloat($("#Employees-form input[name='InputGrossVolume']").val());
                $("#Employees-form input[name='InputPureVolume']").val(((strength * bulk) / 100).toFixed(1));
            } else {
                console.log("a");
                $("#Employees-form input[name='Strength']").val("0");
            }
        });

        $("#Employees-form input[name='InputGrossVolume']").change(function () {
            if ($("#Employees-form input[name='Strength']").val() != '' && $("#Employees-form input[name='Density']").val() != '' && $(this).val() != "") {
                var strength = parseFloat($("#Employees-form input[name='Strength']").val());
                var density = parseFloat($("#Employees-form input[name='Density']").val());
                var bulk = parseFloat($("#Employees-form input[name='InputGrossVolume']").val());
                $("#Employees-form input[name='InputPureVolume']").val(((strength * bulk) / 100).toFixed(1));
            } else {

            }
        });

        $("#Employees-form input[name='ContainerToDepth']").change(function () {
            var strength = parseFloat($("#Employees-form input[name='Strength']").val() != "" || $("#Employees-form input[name='Strength']").val() != "Error" ? parseFloat($("#Employees-form input[name='Strength']").val()) : 0);
            var density = parseFloat($("#Employees-form input[name='Density']").val());
            var containerId = $("#Employees-form input[name='ContainerId']").val() != "" ? parseFloat($("#Employees-form select[name='ContainerId']").val()) : 0;
            var containerFromDepth = $("#Employees-form  input[name='ContainerFromDepth']").val() != "" ? parseFloat($("#Employees-form  input[name='ContainerFromDepth']").val()) : 0;
            var containerToDepth = $(this).val() != "" ? parseFloat($(this).val()) : 0;
            var volume = parseFloat(getVolume(containerId, containerFromDepth, containerToDepth));

            $("#Employees-form input[name='InputGrossVolume']").val(volume.toFixed(1));
            $("#Employees-form input[name='InputPureVolume']").val(((volume * strength) / 100).toFixed(1));
        });

        var d = new Date();
        d.setFullYear(d.getFullYear() - 100);
        $('.datepicker').pickadate({
            // Escape any “rule” characters with an exclamation mark (!).
            format: 'yyyy-mm-dd',
            selectYears: d,
            max: new Date(),
            selectMonths: true, // Creates a dropdown to control month
            selectYears: 15 // Creates a dropdown of 15 years to control year
        });


        $('select').each(function () {
            $(this).material_select();
            $(this).siblings("span").html("");
        });

        $('select').addClass("hidden");

        $(".navigation-help").html("Employee / @ViewBag.EmployeeTypeText");

    </script>
}