@using ProductionControllSystem.Areas.Reports.Models
@model   ContainerCalculationsReportModel
@{
    ViewBag.title = "Container Calculation History";
}
<title>@ViewBag.title</title> 
<div class="panel sub-content-panel col-md-12">
    <form action="no-implementation" id="liquidInput-form" method="POST">

        <div id="name-group" class="form-group col-md-4">
            <label for="name" class="custom-label">Container: </label>
            @Html.DropDownListFor(m => m.ContainerId,
                                  new SelectList(Model.ContainerId,
                               "Id", "ContainerName",
                                        Model.ContainerId.First().Id), new { @class = "form-control custom-text-box  custom-label", id = "ContainerName", name = "Id" })
        </div>
        </form>
</div>
<div class="panel sub-content-panel col-md-12">
    <canvas id="myChart" width="100" height="100"></canvas>
</div>
    @section script{
        <script>
            var ctx = document.getElementById("myChart");
            
            $("#ContainerName").change(function () {
                var dat = new Array();
                var lbls = new Array();
                $.ajax({
                    type: 'get',
                    url: "../../api/ContainerCalculations/GetCalculationsPerContainer?containerId=" + $(this).val(),
                    dataType: 'json',
                    async: false,
                    contentType: 'application/json',
                    success: function (response) {
                        for (var key in response) {
                            lbls.push(response[key]["calculationTime"]);
                            dat.push(response[key]["strength"]);
                        }

                        var myChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: lbls,
                                datasets: [{
                                    label: '# of Votes',
                                    data: dat,
                                    backgroundColor: [
                                        'rgba(255, 99, 132, 0.2)',
                                        'rgba(54, 162, 235, 0.2)',
                                        'rgba(255, 206, 86, 0.2)',
                                        'rgba(75, 192, 192, 0.2)',
                                        'rgba(153, 102, 255, 0.2)',
                                        'rgba(255, 159, 64, 0.2)'
                                    ],
                                    borderColor: [
                                        'rgba(255,99,132,1)',
                                        'rgba(54, 162, 235, 1)',
                                        'rgba(255, 206, 86, 1)',
                                        'rgba(75, 192, 192, 1)',
                                        'rgba(153, 102, 255, 1)',
                                        'rgba(255, 159, 64, 1)'
                                    ],
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        });

                    },
                    error: function (response) {
                        console.log("failure" + response);
                    }
                });
                            console.log(dat);
            });

            $(".navigation-help").html("Dashboard");
        </script>
    }

